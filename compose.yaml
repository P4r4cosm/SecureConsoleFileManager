services:
#  secureconsolefilemanager:
#    image: secureconsolefilemanager
#    build:
#      context: .
#      dockerfile: SecureConsoleFileManager/Dockerfile
#    depends_on:
#      postgres:
#        condition: service_healthy
      
  postgres:
    image: postgres
    container_name: postgres-db_file_manager
    environment:
      - POSTGRES_DB=account_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck: # Добавлена проверка состояния
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.3
    container_name: elasticsearch_file_manager
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - xpack.security.enrollment.enabled=false
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - elastic-net
    
  kibana:
    image: docker.elastic.co/kibana/kibana:9.1.3
    container_name: kibana_file_manager
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elastic-net
  
    
volumes:
  postgres-data:
  elastic_data:
    driver: local
        
networks:
  app-network:
    driver: bridge
  elastic-net:
    driver: bridge
